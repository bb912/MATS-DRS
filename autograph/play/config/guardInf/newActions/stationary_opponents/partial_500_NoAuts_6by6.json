{
automatons: [
  {
    spec: "F(keycard_0 | keycard_2) & (F(keycard_0 | keycard_2) U F(sys2 | sys0))",
    params: [
      {
        name: "keycard_0",
        func: "mine_inventory",
        params: {
          inventory_item: "keycard",
          quantity: 1,
          player: 0
        }
      },
      {
        name: "keycard_2",
        func: "mine_inventory",
        params: {
          inventory_item: "keycard",
          quantity: 1,
          player: 2
        }
      },
      {
        name: "sys0",
        func: "mine_inventory",
        params: {
          inventory_item: "weapon",
          quantity: 1,
          player: 0
        }
      },
      {
        name: "sys2",
        func: "mine_inventory",
        params: {
          inventory_item: "weapon",
          quantity: 1,
          player: 2
        }
      },


    ],
    terminate_on_accept: true,
    termination_accept_reward: 1,
    termination_fail_reward: 0,
    agents_following: [0, 2],
    checkpoint_postfix: "_inf",
    no_aut_shape: true
  },
  {
    spec: "(G(F(see_system1)) | G(F(see_system2))) & F(found_inf_0) & F(found_inf_2)",
    params: [
      {
        name: "found_inf_0",
        func: "mine_found_agents",
        params: {
          agents_must_be_found: [0]
        }
      },
      {
        name: "found_inf_2",
        func: "mine_found_agents",
        params: {
          agents_must_be_found: [2]
        }
      },
      {
        name: "see_system1",
        func: "mine_found_object",
        params: {
          object_index: 0,
          location: [0,1]
        }
      },
      {
        name: "see_system2",
        func: "mine_found_object",
        params: {
          object_index: 0,
          location: [5,1]
        }
      }
    ],
    terminate_on_accept: true,
    termination_accept_reward: 1,
    termination_fail_reward: 0,
    agents_following: [1, 3],
    checkpoint_postfix: "_guard",
    no_aut_shape: true
  },

    ],
  env: {
    type: "minecraft",
    max_episode_len: 500,
    max_len_reward: 0,
    params: {
      num_agents: 4,
      num_teams: 2,
      partial_observability: true,
      partial_distance: [2, 2, 2, 2],
      init_positions: [[5,5], [2,0], [0,5], [3, 0]],
      init_directions: [0, 1, 0, 1],
      init_teams: [0,1,0,1],
      placements: [
        {
          tile: {
            ap_name: "System",
            consumable: true,
            grid_letter: "S",
            inventory_modifier: {
                "weapon": +1
            },
            wall: false
          },
          fixed_placements: [[0,1], [5,1]]
        },
        {
          tile: {
              ap_name: "Keycard",
              consumable: true,
              grid_letter: "k",
              inventory_modifier: {
                "keycard": +1
              },
              wall: false
          },
          fixed_placements: [[2,3]]
        },
        {
          tile: {
              ap_name: "Box",
              consumable: true,
              grid_letter: "B",
              inventory_modifier: {
                "box": +1
              },
              wall: true
          },
          fixed_placements: [[0,2] ,[1,2], [2,2], [3,2], [4,2] ,[5,2], [4,1], [4,0]]
        }
      ],
      inventories: {


        a: [
          {
            name: "keycard",
            capacity: 2,
            default_quantity: 0

          },
          {
            name: "box",
            capacity: 4,
            default_quantity: 2
          },
          {
            name: "weapon",
            capacity: 1,
            default_quantity: 0
          }
        ],
        b: [

        ],

        c: [
          {
            name: "keycard",
            capacity: 2,
            default_quantity: 0

          },
          {
            name: "box",
            capacity: 4,
            default_quantity: 2
          },
          {
            name: "weapon",
            capacity: 1,
            default_quantity: 0
          }

        ],
        d: [

        ]
      },

      shape: [
        6,6
      ]
    }
  },
  discount: 0.99,
  episode_runner: {
    type: "mcts_team",
    params: {
      batch_size: 4,
      num_batches: 20,
      c_aut: 1,
      c_puct: 1,
      c_sigma: 1,
      c_intrins: 0
    }
  },
  training: {
    learning_rate: .001,
    replay_buffer: 100000,
    train_rounds: 10,
    optimizer: "Adam",
    network: "mine-mazenet-dirs",
    min_trace_to_train: 100
  }
}