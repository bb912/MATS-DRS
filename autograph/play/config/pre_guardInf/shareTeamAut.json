{
automatons: [
  {
    spec: "F(wood_0 -> F(factory_0))",
    params: [
      {
        name: "wood_0",
        func: "mine_inventory",
        params: {
          inventory_item: "wood",
          quantity: 1,
          player: 0
        }
      },

      {
        name: "factory_0",
        func: "info_aut",
        params: {
          ap_name: "factory",
          player: 0
        }
      }
    ],
    terminate_on_accept: false,
    termination_accept_reward: 1,

    agents_following: [0, 2],
    checkpoint_postfix: "_inf"
  },
  {
    spec: "F(found) & F(wood_1 -> F(factory_1))",
    params: [
      {
        name: "wood_1",
        func: "mine_inventory",
        params: {
          inventory_item: "wood",
          quantity: 1,
          player: 1
        }
      },
      {
        name: "found",
        func: "mine_found",
        params: {
          player: 0
        }
      },
      {
        name: "factory_1",
        func: "info_aut",
        params: {
          ap_name: "factory",
          player: 1
        }
      }
    ],
    terminate_on_accept: true,
    termination_accept_reward: 1,
    agents_following: [1, 3],
    checkpoint_postfix: "_guard"
  },

    ],
  env: {
    type: "minecraft",
    max_episode_len: 500,
    max_len_reward: 0,
    params: {
      num_agents: 4,
      num_teams: 2,
      partial_observability: false,
      partial_distance: [2, 2, 2, 2],
      init_positions: [[2, 2], [4, 2],  [0, 2], [4,4]],
      init_directions: [1, 3, 1, 3],
      placements: [
        {
          tile: {
            ap_name: "factory",
            consumable: false,
            grid_letter: "F",
            inventory_modifier: {
              "wood": -1,
              "tool": +1
            },
            wall: true
          },
          fixed_placements: [[3,3]]
        },
        {
          tile: {
              ap_name: "wood",
              consumable: true,
              grid_letter: "W",
              inventory_modifier: {
                "wood": +1
              },
              wall: true
          },
          fixed_placements: [[3,3]]
        },
        {
          tile: {
              ap_name: "Obstacle",
              consumable: false,
              grid_letter: "*",
              inventory_modifier: {
              },
              wall: true
          },
          ranom_placements: 0
        },
        {
          tile: {
              ap_name: "Box",
              consumable: true,
              grid_letter: "B",
              inventory_modifier: {
                "box": +1
              },
              wall: true
          },
          fixed_placements: [[2,0], [2, 1], [2,3], [2,4] ,[3,2],[4, 0], [4,1],[4,3] ]
        }
      ],
      inventories: {


        a: [
          {
            name: "wood",
            capacity: 2,
            default_quantity: 0
          },
          {
            name: "tool",
            capacity: 3,
            default_quantity: 3
          },
          {
            name: "box",
            capacity: 1,
            default_quantity: 0
          }
        ],
        b: [
          {
            name: "wood",
            capacity: 2,
            default_quantity: 0
          },
          {
            name: "tool",
            capacity: 3,
            default_quantity: 3
          },
          {
            name: "box",
            capacity: 1,
            default_quantity: 0
          }
        ],

        c: [
          {
            name: "wood",
            capacity: 2,
            default_quantity: 0
          },
          {
            name: "tool",
            capacity: 3,
            default_quantity: 3
          },
          {
            name: "box",
            capacity: 1,
            default_quantity: 0
          }

        ],
        d: [
          {
            name: "wood",
            capacity: 2,
            default_quantity: 0
          },
          {
            name: "tool",
            capacity: 3,
            default_quantity: 3
          },
          {
            name: "box",
            capacity: 1,
            default_quantity: 0
          }

        ]
      },

      shape: [
        5,5
      ]
    }
  },
  discount: 0.99,
  episode_runner: {
    type: "mcts_team",
    params: {
      batch_size: 4,
      num_batches: 20,
      c_aut: 1,
      c_puct: 1,
      c_sigma: 1,
      c_intrins: 0
    }
  },
  training: {
    learning_rate: .001,
    replay_buffer: 100000,
    train_rounds: 10,
    optimizer: "Adam",
    network: "mine-mazenet-dirs",
    min_trace_to_train: 2
  }
}